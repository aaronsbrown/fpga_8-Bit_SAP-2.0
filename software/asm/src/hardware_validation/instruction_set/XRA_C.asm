; XRA_C Comprehensive Test Program
; Tests XRA_C (Exclusive OR A with C) instruction: A = A ^ C
; Flags: Z=+/- (result), N=+/- (result), C=0 (always cleared)

    org $F000

; =================================================================
; TEST 1: Basic XOR operation - A=$00 ^ C=$FF = $FF
; Expected: A=$FF, Z=0, N=1, C=0
; =================================================================
LDI A, #$00    ; Load $00 into A (00000000)
LDI C, #$FF    ; Load $FF into C (11111111)
LDI B, #$BB    ; Load $BB into B for preservation test
XRA C          ; A = $00 ^ $FF = $FF (11111111)

; =================================================================
; TEST 2: Basic XOR operation - A=$FF ^ C=$00 = $FF  
; Expected: A=$FF, Z=0, N=1, C=0
; =================================================================
LDI A, #$FF    ; Load $FF into A (11111111)
LDI C, #$00    ; Load $00 into C (00000000)
XRA C          ; A = $FF ^ $00 = $FF (11111111)

; =================================================================
; TEST 3: XOR operation resulting in zero - A=$FF ^ C=$FF = $00
; Expected: A=$00, Z=1, N=0, C=0
; =================================================================
LDI A, #$FF    ; Load $FF into A (11111111)
LDI C, #$FF    ; Load $FF into C (11111111) 
XRA C          ; A = $FF ^ $FF = $00 (00000000)

; =================================================================
; TEST 4: XOR operation resulting in zero - A=$55 ^ C=$55 = $00
; Expected: A=$00, Z=1, N=0, C=0
; =================================================================
LDI A, #$55    ; Load $55 into A (01010101)
LDI C, #$55    ; Load $55 into C (01010101)
XRA C          ; A = $55 ^ $55 = $00 (00000000)

; =================================================================
; TEST 5: Alternating pattern 1 - A=$55 ^ C=$AA = $FF
; Expected: A=$FF, Z=0, N=1, C=0
; =================================================================
LDI A, #$55    ; Load $55 into A (01010101)
LDI C, #$AA    ; Load $AA into C (10101010)
XRA C          ; A = $55 ^ $AA = $FF (11111111)

; =================================================================
; TEST 6: Alternating pattern 2 - A=$AA ^ C=$55 = $FF
; Expected: A=$FF, Z=0, N=1, C=0
; =================================================================
LDI A, #$AA    ; Load $AA into A (10101010)
LDI C, #$55    ; Load $55 into C (01010101)
XRA C          ; A = $AA ^ $55 = $FF (11111111)

; =================================================================
; TEST 7: Partial overlap - A=$0F ^ C=$F0 = $FF
; Expected: A=$FF, Z=0, N=1, C=0
; =================================================================
LDI A, #$0F    ; Load $0F into A (00001111)
LDI C, #$F0    ; Load $F0 into C (11110000)
XRA C          ; A = $0F ^ $F0 = $FF (11111111)

; =================================================================
; TEST 8: Single bit operations - A=$01 ^ C=$80 = $81
; Expected: A=$81, Z=0, N=1, C=0
; =================================================================
LDI A, #$01    ; Load $01 into A (00000001)
LDI C, #$80    ; Load $80 into C (10000000)
XRA C          ; A = $01 ^ $80 = $81 (10000001)

; =================================================================
; TEST 9: Same value XOR - A=$42 ^ C=$42 = $00
; Expected: A=$00, Z=1, N=0, C=0
; =================================================================
LDI A, #$42    ; Load $42 into A (01000010)
LDI C, #$42    ; Load $42 into C (01000010)
XRA C          ; A = $42 ^ $42 = $00 (00000000)

; =================================================================
; TEST 10: Positive result from mixed operands - A=$C0 ^ C=$30 = $F0
; Expected: A=$F0, Z=0, N=1, C=0
; =================================================================
LDI A, #$C0    ; Load $C0 into A (11000000)
LDI C, #$30    ; Load $30 into C (00110000)
XRA C          ; A = $C0 ^ $30 = $F0 (11110000)

; =================================================================
; TEST 11: Carry flag clearing test - set carry, then XOR
; Expected: A=$7F, Z=0, N=0, C=0 (carry cleared by XRA_C)
; =================================================================
SEC            ; Set carry flag (C=1)
LDI A, #$3F    ; Load $3F into A (00111111)
LDI C, #$40    ; Load $40 into C (01000000)
XRA C          ; A = $3F ^ $40 = $7F (01111111), C cleared

; =================================================================
; TEST 12: All zeros except LSB - A=$01 ^ C=$00 = $01
; Expected: A=$01, Z=0, N=0, C=0
; =================================================================
LDI A, #$01    ; Load $01 into A (00000001)
LDI C, #$00    ; Load $00 into C (00000000)
XRA C          ; A = $01 ^ $00 = $01 (00000001)

; =================================================================
; TEST 13: All zeros except MSB - A=$80 ^ C=$00 = $80
; Expected: A=$80, Z=0, N=1, C=0
; =================================================================
LDI A, #$80    ; Load $80 into A (10000000)
LDI C, #$00    ; Load $00 into C (00000000)
XRA C          ; A = $80 ^ $00 = $80 (10000000)

; =================================================================
; TEST 14: Complex bit pattern - A=$69 ^ C=$96 = $FF
; Expected: A=$FF, Z=0, N=1, C=0
; =================================================================
LDI A, #$69    ; Load $69 into A (01101001)
LDI C, #$96    ; Load $96 into C (10010110)
XRA C          ; A = $69 ^ $96 = $FF (11111111)

; =================================================================
; TEST 15: Subset pattern - A=$0C ^ C=$03 = $0F
; Expected: A=$0F, Z=0, N=0, C=0
; =================================================================
LDI A, #$0C    ; Load $0C into A (00001100)
LDI C, #$03    ; Load $03 into C (00000011)
XRA C          ; A = $0C ^ $03 = $0F (00001111)

; =================================================================
; TEST 16: Edge case - maximum positive ^ minimum positive = $7E
; Expected: A=$7E, Z=0, N=0, C=0
; =================================================================
LDI A, #$7F    ; Load $7F into A (01111111)
LDI C, #$01    ; Load $01 into C (00000001)
XRA C          ; A = $7F ^ $01 = $7E (01111110)

; =================================================================
; TEST 17: Register preservation test
; Expected: B=$5A, C=$5A preserved, A=$66
; =================================================================
LDI A, #$3C    ; Load $3C into A (00111100)
LDI B, #$5A    ; Load $5A into B (01011010)
LDI C, #$5A    ; Load $5A into C (01011010)
XRA C          ; A = $3C ^ $5A = $66 (01100110)

; =================================================================
; TEST 18: All bits set except one - A=$FE ^ C=$01 = $FF
; Expected: A=$FF, Z=0, N=1, C=0
; =================================================================
LDI A, #$FE    ; Load $FE into A (11111110)
LDI C, #$01    ; Load $01 into C (00000001)
XRA C          ; A = $FE ^ $01 = $FF (11111111)

; =================================================================
; TEST 19: Sequential XOR operations to verify no side effects
; =================================================================
LDI A, #$01    ; Load $01 into A (00000001)
LDI C, #$02    ; Load $02 into C (00000010)
XRA C          ; A = $01 ^ $02 = $03 (00000011)

LDI C, #$04    ; Load $04 into C (00000100)
XRA C          ; A = $03 ^ $04 = $07 (00000111)

LDI C, #$08    ; Load $08 into C (00001000)
XRA C          ; A = $07 ^ $08 = $0F (00001111)

; =================================================================
; TEST 20: Boundary value testing - A=$7F ^ C=$80 = $FF
; Expected: A=$FF, Z=0, N=1, C=0
; =================================================================
LDI A, #$7F    ; Load $7F into A (01111111)
LDI C, #$80    ; Load $80 into C (10000000)
XRA C          ; A = $7F ^ $80 = $FF (11111111)

; =================================================================
; TEST 21: Final flag state verification
; Expected: A=$00, Z=1, N=0, C=0 (carry cleared even when set before)
; =================================================================
SEC            ; Set carry flag (C=1)
LDI A, #$AA    ; Load $AA into A (10101010)
LDI C, #$AA    ; Load $AA into C (10101010)
XRA C          ; A = $AA ^ $AA = $00 (00000000), C cleared

; =================================================================
; TEST 22: XOR with alternating bits creating specific pattern
; Expected: A=$F0, Z=0, N=1, C=0
; =================================================================
LDI A, #$CC    ; Load $CC into A (11001100)
LDI C, #$3C    ; Load $3C into C (00111100)
XRA C          ; A = $CC ^ $3C = $F0 (11110000)

; =================================================================
; TEST 23: XOR creating positive result from negative operands
; Expected: A=$33, Z=0, N=0, C=0
; =================================================================
LDI A, #$C3    ; Load $C3 into A (11000011)
LDI C, #$F0    ; Load $F0 into C (11110000)
XRA C          ; A = $C3 ^ $F0 = $33 (00110011)

; =================================================================
; TEST 24: Final comprehensive multi-bit test
; Expected: A=$5A, Z=0, N=0, C=0
; =================================================================
LDI A, #$A5    ; Load $A5 into A (10100101)
LDI C, #$FF    ; Load $FF into C (11111111)
XRA C          ; A = $A5 ^ $FF = $5A (01011010)

HLT            ; Halt processor